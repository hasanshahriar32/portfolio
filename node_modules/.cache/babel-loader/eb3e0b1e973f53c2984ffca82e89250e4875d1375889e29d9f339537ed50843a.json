{"ast":null,"code":"const Default = {\n  triggerType: 'hover',\n  onShow: () => {},\n  onHide: () => {},\n  onToggle: () => {}\n};\nclass Dial {\n  constructor() {\n    let parentEl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let triggerEl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let targetEl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let options = arguments.length > 3 ? arguments[3] : undefined;\n    this._parentEl = parentEl;\n    this._triggerEl = triggerEl;\n    this._targetEl = targetEl;\n    this._options = {\n      ...Default,\n      ...options\n    };\n    this._visible = false;\n    this._init();\n  }\n  _init() {\n    if (this._triggerEl) {\n      const triggerEvents = this._getTriggerEvents();\n      triggerEvents.showEvents.forEach(ev => {\n        this._triggerEl.addEventListener(ev, () => {\n          this.show();\n        });\n        this._targetEl.addEventListener(ev, () => {\n          this.show();\n        });\n      });\n      triggerEvents.hideEvents.forEach(ev => {\n        this._parentEl.addEventListener(ev, () => {\n          setTimeout(() => {\n            if (!this._parentEl.matches(':hover')) {\n              this.hide();\n            }\n          }, 100);\n        });\n      });\n    }\n  }\n  hide() {\n    this._targetEl.classList.add('hidden');\n    if (this._triggerEl) {\n      this._triggerEl.setAttribute('aria-expanded', 'false');\n    }\n    this._visible = false;\n\n    // callback function\n    this._options.onHide(this);\n  }\n  show() {\n    this._targetEl.classList.remove('hidden');\n    if (this._triggerEl) {\n      this._triggerEl.setAttribute('aria-expanded', 'true');\n    }\n    this._visible = true;\n\n    // callback function\n    this._options.onShow(this);\n  }\n  toggle() {\n    if (this._visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  _getTriggerEvents() {\n    switch (this._options.triggerType) {\n      case 'hover':\n        return {\n          showEvents: ['mouseenter', 'focus'],\n          hideEvents: ['mouseleave', 'blur']\n        };\n      case 'click':\n        return {\n          showEvents: ['click', 'focus'],\n          hideEvents: ['focusout', 'blur']\n        };\n      default:\n        return {\n          showEvents: ['mouseenter', 'focus'],\n          hideEvents: ['mouseleave', 'blur']\n        };\n    }\n  }\n}\nwindow.Dial = Dial;\nexport function initDials() {\n  document.querySelectorAll('[data-dial-init]').forEach(parentEl => {\n    const triggerEl = parentEl.querySelector('[data-dial-toggle]');\n    const targetEl = document.getElementById(triggerEl.getAttribute('data-dial-toggle'));\n    const triggerType = triggerEl.getAttribute('data-dial-trigger');\n    new Dial(parentEl, triggerEl, targetEl, {\n      triggerType: triggerType ? triggerType : Default.triggerType\n    });\n  });\n}\nexport default Dial;","map":{"version":3,"names":["Default","triggerType","onShow","onHide","onToggle","Dial","constructor","parentEl","triggerEl","targetEl","options","_parentEl","_triggerEl","_targetEl","_options","_visible","_init","triggerEvents","_getTriggerEvents","showEvents","forEach","ev","addEventListener","show","hideEvents","setTimeout","matches","hide","classList","add","setAttribute","remove","toggle","window","initDials","document","querySelectorAll","querySelector","getElementById","getAttribute"],"sources":["C:/Users/mrhas/Desktop/portfolio/node_modules/flowbite/src/components/dial/index.js"],"sourcesContent":["const Default = {\n    triggerType: 'hover',\n    onShow: () => { },\n    onHide: () => { },\n    onToggle: () => { }\n}\n\nclass Dial {\n    constructor(parentEl = null, triggerEl = null, targetEl = null, options) {\n        this._parentEl = parentEl\n        this._triggerEl = triggerEl\n        this._targetEl = targetEl\n        this._options = { ...Default, ...options }\n        this._visible = false\n        this._init()\n    }\n\n    _init() {\n\n        if (this._triggerEl) {\n            const triggerEvents = this._getTriggerEvents()\n            triggerEvents.showEvents.forEach(ev => {\n                this._triggerEl.addEventListener(ev, () => {\n                    this.show()\n                })\n                this._targetEl.addEventListener(ev, () => {\n                    this.show()\n                })\n            })\n            triggerEvents.hideEvents.forEach(ev => {\n                this._parentEl.addEventListener(ev, () => {\n                    setTimeout(() => {\n                        if (!this._parentEl.matches(':hover')) {\n                            this.hide()\n                        }\n                    }, 100)\n                })\n            })\n        }\n\n    }\n\n    hide() {\n        this._targetEl.classList.add('hidden')\n        if (this._triggerEl) {\n            this._triggerEl.setAttribute('aria-expanded', 'false')\n        }\n        this._visible = false\n\n        // callback function\n        this._options.onHide(this)\n    }\n\n    show() {\n        this._targetEl.classList.remove('hidden')\n        if (this._triggerEl) {\n            this._triggerEl.setAttribute('aria-expanded', 'true')\n        }\n        this._visible = true\n\n        // callback function\n        this._options.onShow(this)\n    }\n\n    toggle() {\n        if (this._visible) {\n            this.hide()\n        } else {\n            this.show()\n        }\n    }\n\n    _getTriggerEvents() {\n        switch (this._options.triggerType) {\n            case 'hover':\n                return {\n                    showEvents: ['mouseenter', 'focus'],\n                    hideEvents: ['mouseleave', 'blur']\n                }\n            case 'click':\n                return {\n                    showEvents: ['click', 'focus'],\n                    hideEvents: ['focusout', 'blur']\n                }\n            default:\n                return {\n                    showEvents: ['mouseenter', 'focus'],\n                    hideEvents: ['mouseleave', 'blur']\n                }\n        }\n    }\n\n}\n\nwindow.Dial = Dial;\n\nexport function initDials() {\n    document.querySelectorAll('[data-dial-init]').forEach(parentEl => {\n        const triggerEl = parentEl.querySelector('[data-dial-toggle]')\n        const targetEl = document.getElementById(triggerEl.getAttribute('data-dial-toggle'))\n        const triggerType = triggerEl.getAttribute('data-dial-trigger')\n\n        new Dial(parentEl, triggerEl, targetEl, {\n            triggerType: triggerType ? triggerType : Default.triggerType\n        })\n    })\n}\n\nexport default Dial"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"C:/Users/mrhas/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as $2AODx$react from \"react\";\nimport { useLayoutEffect as $2AODx$useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nvar $1746a345f3d73bb7$var$useReactId = $2AODx$react['useId'.toString()] || function () {\n  return undefined;\n};\nvar $1746a345f3d73bb7$var$count = 0;\nfunction $1746a345f3d73bb7$export$f680877a34711e37(deterministicId) {\n  var _$2AODx$react$useStat = $2AODx$react.useState($1746a345f3d73bb7$var$useReactId()),\n    _$2AODx$react$useStat2 = _slicedToArray(_$2AODx$react$useStat, 2),\n    id = _$2AODx$react$useStat2[0],\n    setId = _$2AODx$react$useStat2[1]; // React versions older than 18 will have client-side ids only.\n  $2AODx$useLayoutEffect(function () {\n    if (!deterministicId) setId(function (reactId) {\n      return reactId !== null && reactId !== void 0 ? reactId : String($1746a345f3d73bb7$var$count++);\n    });\n  }, [deterministicId]);\n  return deterministicId || (id ? \"radix-\".concat(id) : '');\n}\nexport { $1746a345f3d73bb7$export$f680877a34711e37 as useId };","map":{"version":3,"mappings":";;;AAIA,IAAMA,gCAAU,GAAIC,YAAD,CAAe,QAAQC,QAAR,EAAf,KAAuC;EAAA,OAAMC,SAA7C;AAAA;AACnB,IAAIC,2BAAK,GAAG,CAAZ;AAEA,SAASC,yCAAT,CAAeC,eAAf,EAAiD;EAC/C,4BAAoBL,YAAK,CAACM,QAAN,CAAmCP,gCAAU,EAA7C,CAApB;IAAA;IAAOQ,EAAD;IAAKC,KAAL,6BADyC,CAE/C;EACAC,sBAAe,CAAC,YAAM;IACpB,IAAI,CAACJ,eAAL,EAAsBG,KAAK,CAAEE,iBAAD;MAAA,OAAaA,OAAb,aAAaA,OAAb,cAAaA,OAAb,GAAwBC,MAAM,CAACR,2BAAK,EAAN,CAA/B;IAAA,EAAL;GADT,EAEZ,CAACE,eAAD,CAFY,CAAf;EAGA,OAAOA,eAAe,KAAKE,EAAE,mBAAYA,EAAG,IAAI,EAA1B","names":["useReactId","React","toString","undefined","count","useId","deterministicId","useState","id","setId","useLayoutEffect","reactId","String"],"sources":["C:\\Users\\mrhas\\Desktop\\portfolio\\node_modules\\@radix-ui\\react-id\\dist\\packages\\react\\id\\src\\id.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
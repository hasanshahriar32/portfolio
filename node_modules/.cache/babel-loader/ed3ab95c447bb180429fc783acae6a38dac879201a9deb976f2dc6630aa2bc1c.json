{"ast":null,"code":"import _slicedToArray from \"C:/Users/mrhas/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useCallback as $bnPw9$useCallback, useState as $bnPw9$useState, useRef as $bnPw9$useRef, useEffect as $bnPw9$useEffect } from \"react\";\nimport { useCallbackRef as $bnPw9$useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nfunction $71cd76cc60e0454e$export$6f32135080cb4c3(_ref) {\n  var prop = _ref.prop,\n    defaultProp = _ref.defaultProp,\n    _ref$onChange = _ref.onChange,\n    onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange;\n  var _$71cd76cc60e0454e$va = $71cd76cc60e0454e$var$useUncontrolledState({\n      defaultProp: defaultProp,\n      onChange: onChange\n    }),\n    _$71cd76cc60e0454e$va2 = _slicedToArray(_$71cd76cc60e0454e$va, 2),\n    uncontrolledProp = _$71cd76cc60e0454e$va2[0],\n    setUncontrolledProp = _$71cd76cc60e0454e$va2[1];\n  var isControlled = prop !== undefined;\n  var value1 = isControlled ? prop : uncontrolledProp;\n  var handleChange = $bnPw9$useCallbackRef(onChange);\n  var setValue = $bnPw9$useCallback(function (nextValue) {\n    if (isControlled) {\n      var setter = nextValue;\n      var value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n      if (value !== prop) handleChange(value);\n    } else setUncontrolledProp(nextValue);\n  }, [isControlled, prop, setUncontrolledProp, handleChange]);\n  return [value1, setValue];\n}\nfunction $71cd76cc60e0454e$var$useUncontrolledState(_ref2) {\n  var defaultProp = _ref2.defaultProp,\n    onChange = _ref2.onChange;\n  var uncontrolledState = $bnPw9$useState(defaultProp);\n  var _uncontrolledState = _slicedToArray(uncontrolledState, 1),\n    value = _uncontrolledState[0];\n  var prevValueRef = $bnPw9$useRef(value);\n  var handleChange = $bnPw9$useCallbackRef(onChange);\n  $bnPw9$useEffect(function () {\n    if (prevValueRef.current !== value) {\n      handleChange(value);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n  return uncontrolledState;\n}\nexport { $71cd76cc60e0454e$export$6f32135080cb4c3 as useControllableState };","map":{"version":3,"mappings":";;;AAWA,SAASA,wCAAT,OAIkC;EAAA,IAHhCC,IAD+B,QAXjCA;IAaEC,WAF+B,QAXjCA;IAAA,qBAWiCC;IAG/BA,QAAQ,8BAAG,YAAM,EAAjBA;EAEA,4BAAgDC,0CAAoB,CAAC;MAhBvEF,aAgByEA,WAAF;MAhBvEC,UAgBsFA;KAAhB,CAApE;IAAA;IAAOE,gBAAD;IAAmBC,mBAAnB;EACN,IAAMC,YAAY,GAAGN,IAAI,KAAKO,SAA9B;EACA,IAAMC,MAAK,GAAGF,YAAY,GAAGN,IAAH,GAAUI,gBAApC;EACA,IAAMK,YAAY,GAAGC,qBAAc,CAACR,QAAD,CAAnC;EAEA,IAAMS,QAA6D,GAAGC,mBACnEC,mBAAD,EAAe;IACb,IAAIP,YAAJ,EAAkB;MAChB,IAAMQ,MAAM,GAAGD,SAAf;MACA,IAAML,KAAK,GAAG,OAAOK,SAAP,KAAqB,UAArB,GAAkCC,MAAM,CAACd,IAAD,CAAxC,GAAiDa,SAA/D;MACA,IAAIL,KAAK,KAAKR,IAAd,EAAoBS,YAAY,CAACD,KAAD,CAAZ;KAHtB,MAKEH,mBAAmB,CAACQ,SAAD,CAAnB;GAPgE,EAUpE,CAACP,YAAD,EAAeN,IAAf,EAAqBK,mBAArB,EAA0CI,YAA1C,CAVoE,CAAtE;EAaA,OAAO,CAACD,MAAD,EAAQG,QAAR,CAAP;;AAGF,SAASR,0CAAT,QAGgD;EAAA,IAF9CF,WAD+B,SArCjCA;IAuCEC,iBAvCFA;EAyCE,IAAMa,iBAAiB,GAAGH,gBAA8BX,WAA9B,CAA1B;EACA,wCAAgBc,iBAAhB;IAAOP,KAAD;EACN,IAAMQ,YAAY,GAAGJ,cAAaJ,KAAb,CAArB;EACA,IAAMC,YAAY,GAAGC,qBAAc,CAACR,QAAD,CAAnC;EAEAU,iBAAgB,YAAM;IACpB,IAAII,YAAY,CAACC,OAAb,KAAyBT,KAA7B,EAAoC;MAClCC,YAAY,CAACD,KAAD,CAAZ;MACAQ,YAAY,CAACC,OAAb,GAAuBT,KAAvB;;GAHJ,EAKG,CAACA,KAAD,EAAQQ,YAAR,EAAsBP,YAAtB,CALH,CAKC;EAED,OAAOM,iBAAP","names":["useControllableState","prop","defaultProp","onChange","useUncontrolledState","uncontrolledProp","setUncontrolledProp","isControlled","undefined","value","handleChange","useCallbackRef","setValue","React","nextValue","setter","uncontrolledState","prevValueRef","current"],"sources":["C:\\Users\\mrhas\\Desktop\\portfolio\\node_modules\\@radix-ui\\react-use-controllable-state\\dist\\packages\\react\\use-controllable-state\\src\\useControllableState.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
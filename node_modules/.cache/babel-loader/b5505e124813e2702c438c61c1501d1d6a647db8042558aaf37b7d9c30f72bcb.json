{"ast":null,"code":"import { createPopper } from '@popperjs/core';\nconst Default = {\n  placement: 'bottom',\n  triggerType: 'click',\n  onShow: () => {},\n  onHide: () => {}\n};\nclass Dropdown {\n  constructor() {\n    let targetElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let triggerElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this._targetEl = targetElement;\n    this._triggerEl = triggerElement;\n    this._options = {\n      ...Default,\n      ...options\n    };\n    this._popperInstance = this._createPopperInstace();\n    this._visible = false;\n    this._init();\n  }\n  _init() {\n    if (this._triggerEl) {\n      this._triggerEl.addEventListener('click', () => {\n        this.toggle();\n      });\n    }\n  }\n  _createPopperInstace() {\n    return createPopper(this._triggerEl, this._targetEl, {\n      placement: this._options.placement,\n      modifiers: [{\n        name: 'offset',\n        options: {\n          offset: [0, 10]\n        }\n      }]\n    });\n  }\n  _handleClickOutside(ev, targetEl) {\n    const clickedEl = ev.target;\n    if (clickedEl !== targetEl && !targetEl.contains(clickedEl) && !this._triggerEl.contains(clickedEl) && this._visible) {\n      this.hide();\n    }\n    document.body.removeEventListener('click', this._handleClickOutside, true);\n  }\n  toggle() {\n    if (this._visible) {\n      this.hide();\n      document.body.removeEventListener('click', this._handleClickOutside, true);\n    } else {\n      this.show();\n    }\n  }\n  show() {\n    this._targetEl.classList.remove('hidden');\n    this._targetEl.classList.add('block');\n\n    // Enable the event listeners\n    this._popperInstance.setOptions(options => ({\n      ...options,\n      modifiers: [...options.modifiers, {\n        name: 'eventListeners',\n        enabled: true\n      }]\n    }));\n    document.body.addEventListener('click', ev => {\n      this._handleClickOutside(ev, this._targetEl);\n    }, true);\n\n    // Update its position\n    this._popperInstance.update();\n    this._visible = true;\n\n    // callback function\n    this._options.onShow(this);\n  }\n  hide() {\n    this._targetEl.classList.remove('block');\n    this._targetEl.classList.add('hidden');\n\n    // Disable the event listeners\n    this._popperInstance.setOptions(options => ({\n      ...options,\n      modifiers: [...options.modifiers, {\n        name: 'eventListeners',\n        enabled: false\n      }]\n    }));\n    this._visible = false;\n\n    // callback function\n    this._options.onHide(this);\n  }\n}\nwindow.Dropdown = Dropdown;\nexport function initDropdowns() {\n  document.querySelectorAll('[data-dropdown-toggle]').forEach(triggerEl => {\n    const targetEl = document.getElementById(triggerEl.getAttribute('data-dropdown-toggle'));\n    const placement = triggerEl.getAttribute('data-dropdown-placement');\n    new Dropdown(targetEl, triggerEl, {\n      placement: placement ? placement : Default.placement\n    });\n  });\n}\nexport default Dropdown;","map":{"version":3,"names":["createPopper","Default","placement","triggerType","onShow","onHide","Dropdown","constructor","targetElement","triggerElement","options","_targetEl","_triggerEl","_options","_popperInstance","_createPopperInstace","_visible","_init","addEventListener","toggle","modifiers","name","offset","_handleClickOutside","ev","targetEl","clickedEl","target","contains","hide","document","body","removeEventListener","show","classList","remove","add","setOptions","enabled","update","window","initDropdowns","querySelectorAll","forEach","triggerEl","getElementById","getAttribute"],"sources":["C:/Users/mrhas/Desktop/portfolio/node_modules/flowbite/src/components/dropdown/index.js"],"sourcesContent":["import { createPopper } from '@popperjs/core';\n\nconst Default = {\n    placement: 'bottom',\n    triggerType: 'click',\n    onShow: () => { },\n    onHide: () => { }\n}\n\nclass Dropdown {\n    constructor(targetElement = null, triggerElement = null, options = {}) {\n        this._targetEl = targetElement\n        this._triggerEl = triggerElement\n        this._options = { ...Default, ...options }\n        this._popperInstance = this._createPopperInstace()\n        this._visible = false\n        this._init()\n    }\n\n    _init() {\n        if (this._triggerEl) {\n            this._triggerEl.addEventListener('click', () => {\n                this.toggle()\n            })\n        }\n    }\n\n    _createPopperInstace() {\n        return createPopper(this._triggerEl, this._targetEl, {\n            placement: this._options.placement,\n            modifiers: [\n                {\n                    name: 'offset',\n                    options: {\n                        offset: [0, 10],\n                    },\n                },\n            ],\n        });\n    }\n\n    _handleClickOutside(ev, targetEl) {\n        const clickedEl = ev.target\n        if (clickedEl !== targetEl && !targetEl.contains(clickedEl) && !this._triggerEl.contains(clickedEl) && this._visible) {\n            this.hide()\n        }\n        document.body.removeEventListener('click', this._handleClickOutside, true)\n    }\n\n    toggle() {\n        if (this._visible) {\n            this.hide()\n            document.body.removeEventListener('click', this._handleClickOutside, true)\n        } else {\n            this.show()\n        }\n    }\n\n    show() {\n        this._targetEl.classList.remove('hidden')\n        this._targetEl.classList.add('block')\n\n        // Enable the event listeners\n        this._popperInstance.setOptions(options => ({\n            ...options,\n            modifiers: [\n                ...options.modifiers,\n                { name: 'eventListeners', enabled: true },\n            ],\n        }));\n\n        document.body.addEventListener('click', (ev) => { this._handleClickOutside(ev, this._targetEl) }, true)\n\n        // Update its position\n        this._popperInstance.update()\n        this._visible = true\n\n        // callback function\n        this._options.onShow(this)\n    }\n\n    hide() {\n        this._targetEl.classList.remove('block')\n        this._targetEl.classList.add('hidden')\n\n        // Disable the event listeners\n        this._popperInstance.setOptions(options => ({\n            ...options,\n            modifiers: [\n                ...options.modifiers,\n                { name: 'eventListeners', enabled: false },\n            ],\n        }))\n\n        this._visible = false\n\n        // callback function\n        this._options.onHide(this)\n    }\n}\n\nwindow.Dropdown = Dropdown;\n\nexport function initDropdowns() {\n    document.querySelectorAll('[data-dropdown-toggle]').forEach(triggerEl => {\n        const targetEl = document.getElementById(triggerEl.getAttribute('data-dropdown-toggle'))\n        const placement = triggerEl.getAttribute('data-dropdown-placement')\n\n        new Dropdown(targetEl, triggerEl, {\n            placement: placement ? placement : Default.placement\n        })\n    })\n}\n\nexport default Dropdown"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}